immutable
负责固定数据，

immutable Data
immutable Data就是一旦创建，就不能再被更改的数据，对immutable对象的任何修改或添加删除操作都会返回一个新的immutable对象。


Immutable实现的原理是使用旧数据创建新数据时，要保证旧数据同时可用且不变。同时为了避免deepcopy把所有节点都复制一遍带来的性能损耗。

如果对象树中一个节点发生变化，只修改这个节点和受它影响的父节点，其他节点则进行共享。


Immutable 的几种数据类型


List: 有序索引集，类似JavaScript中的Array。


Map: 无序索引集，类似JavaScript中的Object。


OrderedMap: 有序的Map，根据数据的set()进行排序。


Set: 没有重复值的集合。


OrderedSet: 有序的Set，根据数据的add进行排序。


Stack: 有序集合，支持使用unshift（）和shift（）添加和删除。


Range(): 返回一个Seq.Indexed类型的集合，这个方法有三个参数，start表示开始值，默认值为0，end表示结束值，默认为无穷大，step代表每次增大的数值，默认为1.如果start = end,则返回空集合。


Repeat(): 返回一个vSeq.Indexe类型的集合，这个方法有两个参数，value代表需要重复的值，times代表要重复的次数，默认为无穷大。
Record: 一个用于生成Record实例的类。类似于JavaScript的Object，但是只接收特定字符串为key，具有默认值。


Seq: 序列，但是可能不能由具体的数据结构支持。


Collection: 是构建所有数据结构的基类，不可以直接构建。
用的最多就是List和Map，所以在这里主要介绍这两种数据类型的API。